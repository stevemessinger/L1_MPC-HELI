%{
Extended Kalman Filter design using Vicon motion capture and IMU data

Steve Messinger 
Sources: Optimal State Estimation -Dan Simon 
%}

clear all 
close all 
clc

% IMU data organized as follows 
%time	field.ax	field.ay	field.az	field.gx	field.gy	field.gz
%(1)       (2)         (3)         (4)         (5)         (6)         (7)

load('imuTest.mat') %load data 

%% SETUP
t = 0:0.01:(length(IMUTest)-1)*0.01; %time vector

run_case = 'test'; %change runcase to 'test' or 'data_#"

%% FILTER DESIGN 

%perform fft 
Fs = 100; % sampling frequency in Hz
T = 1/Fs; % sampling period




% Butterworth Filter Design 
fc = 30;     % high cut frequency in Hz
Order = 4; %butterworth order 
[b,a] = butter(Order,fc/(Fs/2),'low');   % Get filter coeff of butter filter

%choose data according to run_case 
switch run_case 
    case 'test' 
        filt_accel = filtfilt(b,a, IMUTest); % zero phase delay low-pass filtering
end 



figure(1) 
subplot(3,1,1)
plot(t, IMUTest(:,2))
hold on 
plot(t, filt_accel(:,2),'LineWidth',2)
ylabel('$\ddot{x}$','interpreter','latex')
xlabel('time (s)')
subplot(3,1,2)
plot(t, IMUTest(:,3))
hold on 
plot(t, filt_accel(:,3),'LineWidth',2)
ylabel('$\ddot{y}$','interpreter','latex')
xlabel('time (s)')
subplot(3,1,3)
plot(t, IMUTest(:,4))
hold on 
plot(t, filt_accel(:,4),'LineWidth',2)
ylabel('$\ddot{z}$','interpreter','latex')
xlabel('time (s)')

figure(2) 
subplot(3,1,1)
plot(t, IMUTest(:,5))
hold on 
plot(t, filt_accel(:,5),'LineWidth',2)
ylabel('$p$','interpreter','latex')
xlabel('time (s)')
subplot(3,1,2)
plot(t, IMUTest(:,6))
hold on 
plot(t, filt_accel(:,6),'LineWidth',2)
ylabel('$q$','interpreter','latex')
xlabel('time (s)')
subplot(3,1,3)
plot(t, IMUTest(:,7))
hold on 
plot(t, filt_accel(:,7),'LineWidth',2)
ylabel('$r$','interpreter','latex')
xlabel('time (s)')